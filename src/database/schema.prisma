generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Sign {
  id   String @id @default(uuid())
  sign String @db.VarChar(15)

  User User[]
  @@map("signs")
}

model SocialStatus {
  id     String @id @default(uuid())
  status String @db.VarChar(20)

  User User[]
  @@map("social_status")
}

model Drinking {
  id     String @id @default(uuid())
  option String @db.VarChar(15)

  User User[]
  @@map("drinking")
}

model User {
  id             String       @id @default(uuid())
  firstName      String       @map("first_name") @db.VarChar(20)
  lastName       String       @map("last_name") @db.VarChar(30)
  username       String       @db.VarChar(20)
  email          String       @db.VarChar(50)
  password       String       @db.VarChar(200)
  imageUrl       String       @map("image_url") @db.VarChar(500)
  socialStatus   SocialStatus @relation(fields: [socialStatusId], references: [id])
  socialStatusId String       @map("social_status_id")
  birthDate      DateTime     @map("birth_date")
  children       Boolean
  smokes         Boolean
  drinking       Drinking     @relation(fields: [drinkingID], references: [id])
  drinkingID     String       @map("drinking_id")
  sign           Sign         @relation(fields: [signId], references: [id])
  signId         String       @map("sign_id")
  biography      String       @db.VarChar(300)
  active         Boolean
  createdAt      DateTime     @default(now()) @map("created_at")
  updatedAt      DateTime     @default(now()) @map("updated_name")

  Post Post[]
  @@map("users")
}

model Post {
  id        String   @id @default(uuid())
  content   String   @db.VarChar(300)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @map("author_id")
  mediaUrl  String   @db.VarChar(500)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  @@map("posts")
}
